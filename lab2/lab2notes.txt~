pthread_join
pthread_yield
pthread_create
pthread_exit

clock_gettime

struct timespec
{

};

use CLOCK_MONTONIC

wall time vs cpu time

wall time, in real life, alpha 
cpu time, time of cpu, beta

alpha < beta can happen when we have multiple threads
alpha == beta when there is a single thread
alpha > beta when there is overhead from other funtions and io
or when you have a pipe but there is a block for a minute, the cpu time will stop 
but real time continues

gnuplot 5

do not use 4


 
lab2_add

1)o prep
start time calloc

2)start all threads 

for loop
   add()

3) wait endtime
--------
----------------------------------------------------------------

2.1.1.1

use a for loop to investigate the list ,  spin lock cost more time on cpu using a normal cpu with 4 cores
on seasnet the mutex is slower than because the cost of creating 16 threads. the spin lock will take waste cpu time, thats why it takes forever the actual should be between 16 to 160 the mutex time 
spinlock should 

q2.2.2
a
the list is lower than the add function
if we check the original result the cost is much higher than the add function
obviously list operations are much longer than add so should have higher cost 
per operation

lab2b
========================================================================

